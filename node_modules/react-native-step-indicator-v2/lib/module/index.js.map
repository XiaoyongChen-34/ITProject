{"version":3,"sources":["index.tsx"],"names":["React","View","Text","StyleSheet","Animated","TouchableWithoutFeedback","STEP_STATUS","CURRENT","FINISHED","UNFINISHED","defaultStyles","stepIndicatorSize","currentStepIndicatorSize","separatorStrokeWidth","separatorStrokeUnfinishedWidth","separatorStrokeFinishedWidth","currentStepStrokeWidth","stepStrokeWidth","stepStrokeCurrentColor","stepStrokeFinishedColor","stepStrokeUnFinishedColor","separatorFinishedColor","separatorUnFinishedColor","stepIndicatorFinishedColor","stepIndicatorUnFinishedColor","stepIndicatorCurrentColor","stepIndicatorLabelFontSize","currentStepIndicatorLabelFontSize","stepIndicatorLabelCurrentColor","stepIndicatorLabelFinishedColor","stepIndicatorLabelUnFinishedColor","labelColor","labelSize","labelAlign","currentStepLabelColor","borderRadiusSize","StepIndicator","currentPosition","stepCount","direction","customStyles","customStylesFromProps","labels","onPress","renderStepIndicator","renderCustomStepIndicator","renderLabel","width","setWidth","useState","height","setHeight","progressBarSize","setProgressBarSize","setCustomStyles","progressAnim","useRef","Value","current","sizeAnim","staleSizeAnim","borderRadiusAnim","stepPressed","position","effectCustomStyles","useEffect","effectCurrentPosition","onCurrentPositionChanged","renderProgressBarBackground","progressBarBackgroundStyle","backgroundColor","left","top","bottom","right","event","nativeEvent","layout","renderProgressBar","progressBarStyle","steps","push","styles","stepContainer","flexDirection","renderStep","stepIndicatorContainer","renderStepLabels","length","labelViews","map","label","index","selectedStepLabelStyle","color","stepLabelItem","stepStatus","getStepStatus","stepLabel","fontSize","fontFamily","labelFontFamily","stepLabelsContainer","paddingHorizontal","paddingVertical","alignItems","stepStyle","indicatorLabelStyle","borderWidth","borderColor","borderRadius","overflow","step","stepPosition","animateToPosition","setValue","sequence","timing","toValue","isNaN","duration","useNativeDriver","parallel","start","container","flex","create","justifyContent","zIndex","textAlign","fontWeight","memo"],"mappings":"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","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\nimport React from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Animated,\n  TouchableWithoutFeedback,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\nimport { StepIndicatorProps } from './types';\n\nconst STEP_STATUS = {\n  CURRENT: 'current',\n  FINISHED: 'finished',\n  UNFINISHED: 'unfinished',\n};\n\ninterface DefaultStepIndicatorStyles {\n  stepIndicatorSize: number;\n  currentStepIndicatorSize: number;\n  separatorStrokeWidth: number;\n  separatorStrokeUnfinishedWidth: number;\n  separatorStrokeFinishedWidth: number;\n  currentStepStrokeWidth: number;\n  stepStrokeWidth: number;\n  stepStrokeCurrentColor: string;\n  stepStrokeFinishedColor: string;\n  stepStrokeUnFinishedColor: string;\n  separatorFinishedColor: string;\n  separatorUnFinishedColor: string;\n  stepIndicatorFinishedColor: string;\n  stepIndicatorUnFinishedColor: string;\n  stepIndicatorCurrentColor: string;\n  stepIndicatorLabelFontSize: number;\n  currentStepIndicatorLabelFontSize: number;\n  stepIndicatorLabelCurrentColor: string;\n  stepIndicatorLabelFinishedColor: string;\n  stepIndicatorLabelUnFinishedColor: string;\n  labelColor: string;\n  labelSize: number;\n  labelAlign:\n    | 'center'\n    | 'flex-start'\n    | 'flex-end'\n    | 'stretch'\n    | 'baseline'\n    | undefined;\n  currentStepLabelColor: string;\n  labelFontFamily?: string;\n  borderRadiusSize:number;\n}\n\nconst defaultStyles: DefaultStepIndicatorStyles = {\n  stepIndicatorSize: 30,\n  currentStepIndicatorSize: 40,\n  separatorStrokeWidth: 3,\n  separatorStrokeUnfinishedWidth: 0,\n  separatorStrokeFinishedWidth: 0,\n  currentStepStrokeWidth: 5,\n  stepStrokeWidth: 0,\n  stepStrokeCurrentColor: '#4aae4f',\n  stepStrokeFinishedColor: '#4aae4f',\n  stepStrokeUnFinishedColor: '#4aae4f',\n  separatorFinishedColor: '#4aae4f',\n  separatorUnFinishedColor: '#a4d4a5',\n  stepIndicatorFinishedColor: '#4aae4f',\n  stepIndicatorUnFinishedColor: '#a4d4a5',\n  stepIndicatorCurrentColor: '#ffffff',\n  stepIndicatorLabelFontSize: 15,\n  currentStepIndicatorLabelFontSize: 15,\n  stepIndicatorLabelCurrentColor: '#000000',\n  stepIndicatorLabelFinishedColor: '#ffffff',\n  stepIndicatorLabelUnFinishedColor: 'rgba(255,255,255,0.5)',\n  labelColor: '#000000',\n  labelSize: 13,\n  labelAlign: 'center',\n  currentStepLabelColor: '#4aae4f',\n  borderRadiusSize:10\n};\n\nconst StepIndicator = ({\n  currentPosition = 0,\n  stepCount = 5,\n  direction = 'horizontal',\n  customStyles: customStylesFromProps = defaultStyles,\n  labels = [],\n  onPress,\n  renderStepIndicator: renderCustomStepIndicator,\n  renderLabel,\n}: StepIndicatorProps) => {\n  const [width, setWidth] = React.useState<number>(0);\n  const [height, setHeight] = React.useState<number>(0);\n  const [progressBarSize, setProgressBarSize] = React.useState<number>(0);\n  const [customStyles, setCustomStyles] = React.useState<\n    DefaultStepIndicatorStyles\n  >({\n    ...defaultStyles,\n    ...customStylesFromProps,\n  });\n\n  const progressAnim = React.useRef(new Animated.Value(0)).current;\n  const sizeAnim = React.useRef(\n    new Animated.Value(customStyles.stepIndicatorSize)\n  ).current;\n  const staleSizeAnim = React.useRef(\n    new Animated.Value(customStyles.stepIndicatorSize)\n  ).current;\n  const borderRadiusAnim = React.useRef(\n    new Animated.Value(customStyles.borderRadiusSize)\n  ).current;\n\n  const stepPressed = (position: number) => {\n    if (onPress) {\n      onPress(position);\n    }\n  };\n\n  const effectCustomStyles = () => {\n    setCustomStyles({ ...customStyles, ...customStylesFromProps });\n  };\n  React.useEffect(effectCustomStyles, [customStylesFromProps]);\n\n  const effectCurrentPosition = () => {\n    onCurrentPositionChanged(currentPosition);\n  };\n  React.useEffect(effectCurrentPosition, [currentPosition, progressBarSize]);\n\n  const renderProgressBarBackground = () => {\n    let progressBarBackgroundStyle: ViewStyle = {\n      backgroundColor: customStyles.separatorUnFinishedColor,\n      position: 'absolute',\n    };\n    if (direction === 'vertical') {\n      progressBarBackgroundStyle = {\n        ...progressBarBackgroundStyle,\n        left: (width - customStyles.separatorStrokeWidth) / 2,\n        top: height / (2 * stepCount),\n        bottom: height / (2 * stepCount),\n        width:\n          customStyles.separatorStrokeUnfinishedWidth === 0\n            ? customStyles.separatorStrokeWidth\n            : customStyles.separatorStrokeUnfinishedWidth,\n      };\n    } else {\n      progressBarBackgroundStyle = {\n        ...progressBarBackgroundStyle,\n        top: (height - customStyles.separatorStrokeWidth) / 2,\n        left: width / (2 * stepCount),\n        right: width / (2 * stepCount),\n        height:\n          customStyles.separatorStrokeUnfinishedWidth === 0\n            ? customStyles.separatorStrokeWidth\n            : customStyles.separatorStrokeUnfinishedWidth,\n      };\n    }\n    return (\n      <View\n        onLayout={(event) => {\n          if (direction === 'vertical') {\n            setProgressBarSize(event.nativeEvent.layout.height);\n          } else {\n            setProgressBarSize(event.nativeEvent.layout.width);\n          }\n        }}\n        style={progressBarBackgroundStyle}\n      />\n    );\n  };\n\n  const renderProgressBar = () => {\n    let progressBarStyle: any = {\n      backgroundColor: customStyles.separatorFinishedColor,\n      position: 'absolute',\n    };\n    if (direction === 'vertical') {\n      progressBarStyle = {\n        ...progressBarStyle,\n        left: (width - customStyles.separatorStrokeWidth) / 2,\n        top: height / (2 * stepCount),\n        bottom: height / (2 * stepCount),\n        width:\n          customStyles.separatorStrokeFinishedWidth === 0\n            ? customStyles.separatorStrokeWidth\n            : customStyles.separatorStrokeFinishedWidth,\n        height: progressAnim,\n      };\n    } else {\n      progressBarStyle = {\n        ...progressBarStyle,\n        top: (height - customStyles.separatorStrokeWidth) / 2,\n        left: width / (2 * stepCount),\n        right: width / (2 * stepCount),\n        height:\n          customStyles.separatorStrokeFinishedWidth === 0\n            ? customStyles.separatorStrokeWidth\n            : customStyles.separatorStrokeFinishedWidth,\n        width: progressAnim,\n      };\n    }\n    return <Animated.View style={progressBarStyle} />;\n  };\n\n  const renderStepIndicator = () => {\n    let steps = [];\n    for (let position = 0; position < stepCount; position++) {\n      steps.push(\n        <TouchableWithoutFeedback\n          key={position}\n          onPress={() => stepPressed(position)}\n        >\n          <View\n            style={[\n              styles.stepContainer,\n              direction === 'vertical'\n                ? { flexDirection: 'column' }\n                : { flexDirection: 'row' },\n            ]}\n          >\n            {renderStep(position)}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    }\n    return (\n      <View\n        onLayout={(event) => {\n          setWidth(event.nativeEvent.layout.width);\n          setHeight(event.nativeEvent.layout.height);\n        }}\n        style={[\n          styles.stepIndicatorContainer,\n          direction === 'vertical'\n            ? {\n                flexDirection: 'column',\n                width: customStyles.currentStepIndicatorSize,\n              }\n            : {\n                flexDirection: 'row',\n                height: customStyles.currentStepIndicatorSize,\n              },\n        ]}\n      >\n        {steps}\n      </View>\n    );\n  };\n\n  const renderStepLabels = () => {\n    if (!labels || labels.length === 0) {\n      return;\n    }\n    var labelViews = labels.map((label, index) => {\n      const selectedStepLabelStyle =\n        index === currentPosition\n          ? { color: customStyles.currentStepLabelColor }\n          : { color: customStyles.labelColor };\n      return (\n        <TouchableWithoutFeedback\n          style={styles.stepLabelItem}\n          key={index}\n          onPress={() => stepPressed(index)}\n        >\n          <View style={styles.stepLabelItem}>\n            {renderLabel ? (\n              renderLabel({\n                position: index,\n                stepStatus: getStepStatus(index),\n                label,\n                currentPosition,\n              })\n            ) : (\n              <Text\n                style={[\n                  styles.stepLabel,\n                  selectedStepLabelStyle,\n                  {\n                    fontSize: customStyles.labelSize,\n                    fontFamily: customStyles.labelFontFamily,\n                  },\n                ]}\n              >\n                {label}\n              </Text>\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    });\n\n    return (\n      <View\n        style={[\n          styles.stepLabelsContainer,\n          direction === 'vertical'\n            ? { flexDirection: 'column', paddingHorizontal: 4 }\n            : { flexDirection: 'row', paddingVertical: 4 },\n          { alignItems: customStyles.labelAlign },\n        ]}\n      >\n        {labelViews}\n      </View>\n    );\n  };\n\n  const renderStep = (position: number) => {\n    let stepStyle;\n    let indicatorLabelStyle: TextStyle = {};\n    switch (getStepStatus(position)) {\n      case STEP_STATUS.CURRENT: {\n        stepStyle = {\n          backgroundColor: customStyles.stepIndicatorCurrentColor,\n          borderWidth: customStyles.currentStepStrokeWidth,\n          borderColor: customStyles.stepStrokeCurrentColor,\n          height: sizeAnim,\n          width: sizeAnim,\n          borderRadius: borderRadiusAnim,\n          overflow: 'hidden',\n        };\n        indicatorLabelStyle = {\n          overflow: 'hidden',\n          fontSize: customStyles.currentStepIndicatorLabelFontSize,\n          color: customStyles.stepIndicatorLabelCurrentColor,\n        };\n\n        break;\n      }\n      case STEP_STATUS.FINISHED: {\n        stepStyle = {\n          backgroundColor: customStyles.stepIndicatorFinishedColor,\n          borderWidth: customStyles.stepStrokeWidth,\n          borderColor: customStyles.stepStrokeFinishedColor,\n          height: staleSizeAnim,\n          width: staleSizeAnim,\n          borderRadius:customStyles.borderRadiusSize,\n          overflow: 'hidden',\n        };\n        indicatorLabelStyle = {\n          overflow: 'hidden',\n          fontSize: customStyles.stepIndicatorLabelFontSize,\n          color: customStyles.stepIndicatorLabelFinishedColor,\n        };\n        break;\n      }\n\n      case STEP_STATUS.UNFINISHED: {\n        stepStyle = {\n          backgroundColor: customStyles.stepIndicatorUnFinishedColor,\n          borderWidth: customStyles.stepStrokeWidth,\n          borderColor: customStyles.stepStrokeUnFinishedColor,\n          height: staleSizeAnim,\n          width: staleSizeAnim,\n          borderRadius: customStyles.borderRadiusSize,\n          overflow: 'hidden',\n        };\n        indicatorLabelStyle = {\n          overflow: 'hidden',\n          fontSize: customStyles.stepIndicatorLabelFontSize,\n          color: customStyles.stepIndicatorLabelUnFinishedColor,\n        };\n        break;\n      }\n      default:\n    }\n\n    return (\n      <Animated.View key={'step-indicator'} style={[styles.step, stepStyle]}>\n        {renderCustomStepIndicator ? (\n          renderCustomStepIndicator({\n            position,\n            stepStatus: getStepStatus(position),\n          })\n        ) : (\n          <Text style={indicatorLabelStyle}>{`${position + 1}`}</Text>\n        )}\n      </Animated.View>\n    );\n  };\n\n  const getStepStatus = (stepPosition: number) => {\n    if (stepPosition === currentPosition) {\n      return STEP_STATUS.CURRENT;\n    } else if (stepPosition < currentPosition) {\n      return STEP_STATUS.FINISHED;\n    } else {\n      return STEP_STATUS.UNFINISHED;\n    }\n  };\n\n  const onCurrentPositionChanged = (position: number) => {\n    if (position > stepCount - 1) {\n      position = stepCount - 1;\n    }\n    const animateToPosition = (progressBarSize / (stepCount - 1)) * position;\n    sizeAnim.setValue(customStyles.stepIndicatorSize);\n    staleSizeAnim.setValue(customStyles.stepIndicatorSize);\n    borderRadiusAnim.setValue(customStyles.borderRadiusSize);\n    Animated.sequence([\n      Animated.timing(progressAnim, {\n        toValue: isNaN(animateToPosition) ? 0 : animateToPosition,\n        duration: 200,\n        useNativeDriver: false,\n      }),\n      Animated.parallel([\n        Animated.timing(sizeAnim, {\n          toValue: customStyles.currentStepIndicatorSize,\n          duration: 100,\n          useNativeDriver: false,\n        }),\n        Animated.timing(borderRadiusAnim, {\n          toValue: customStyles.borderRadiusSize,\n          duration: 100,\n          useNativeDriver: false,\n        }),\n      ]),\n    ]).start();\n  };\n\n  return (\n    <View\n      style={[\n        styles.container,\n        direction === 'vertical'\n          ? { flexDirection: 'row', flex: 1 }\n          : { flexDirection: 'column' },\n      ]}\n    >\n      {width !== 0 && (\n        <React.Fragment>\n          {renderProgressBarBackground()}\n          {renderProgressBar()}\n        </React.Fragment>\n      )}\n      {renderStepIndicator()}\n      {labels && renderStepLabels()}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'rgba(1,0,0,0)',\n  },\n  stepIndicatorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    backgroundColor: 'rgba(1,0,0,0)',\n  },\n  stepLabelsContainer: {\n    justifyContent: 'space-around',\n  },\n  step: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2,\n  },\n  stepContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  stepLabel: {\n    fontSize: 12,\n    textAlign: 'center',\n    fontWeight: '500',\n  },\n  stepLabelItem: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(StepIndicator);\n"]}